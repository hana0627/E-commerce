server:
  port: 8000

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka # eurekaClient 등록위치

spring:
  application:
    name: apigateway-service

  cloud:
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
      routes:
#        - id: user-service
#          uri: lb://USER-SERVICE #등록된 MicroService 이름
#          predicates: # 조건절과 같은 의미
#            - Path=/user-service/** #Path 정보를 지정

        - id: user-service
          uri: lb://USER-SERVICE #등록된 MicroService 이름
          predicates: # 조건절과 같은 의미 
            - Path=/user-service/login #로그인
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie #POST 요청이 들어오면 헤더값을 삭제(새로운 요청처럼 인식하기 위함)
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        - id: user-service
          uri: lb://USER-SERVICE #등록된 MicroService 이름
          predicates: # 조건절과 같은 의미
            - Path=/user-service/users #회원가입
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie #POST 요청이 들어오면 헤더값을 삭제(새로운 요청처럼 인식하기 위함)
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}


        - id: user-service
          uri: lb://USER-SERVICE #등록된 MicroService 이름
          predicates: # 조건절과 같은 의미
            - Path=/user-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie #POST 요청이 들어오면 헤더값을 삭제(새로운 요청처럼 인식하기 위함)
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}




        - id: catalog-service
          uri: lb://CATALOG-SERVICE #등록된 MicroService 이름
          predicates: # 조건절과 같은 의미
            - Path=/catalog-service/** #Path 정보를 지정
        - id: order-service
          uri: lb://ORDER-SERVICE #등록된 MicroService 이름
          predicates: # 조건절과 같은 의미
            - Path=/order-service/** #Path 정보를 지정